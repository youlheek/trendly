plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
    group = 'com.rebootcrew.trendly'
    version = '0.0.1-SNAPSHOT'
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation project(':common')
    implementation project(':user')
    implementation project(':discussion')
    implementation project(':websocket')
    implementation project(':trending')
    implementation project(':batch')

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 플랫폼 실행기
}



subprojects {
    // 모든 하위 프로젝트에 다음 플러그인을 공통 적용
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        implementation 'org.springframework.data:spring-data-envers'

        // swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

        // spring security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT
        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        // MySQL
        implementation 'mysql:mysql-connector-java:8.0.32'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // HikariCP는 경량화된 고성능 JDBC 커넥션 풀
        implementation 'com.zaxxer:HikariCP:5.0.1'

        // WebFlux를 사용한 비동기, 반응형 웹 애플리케이션 개발 지원 (Elastic Search와의 통합을 위해 사용)
        implementation 'org.springframework.boot:spring-boot-starter-webflux'

        // Redis 데이터베이스 지원 (Redis를 통한 캐시, 데이터 저장 등에 사용)
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        // MongoDB 데이터베이스 지원 (MongoDB와의 통합 및 데이터 처리)
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

        // Spring Batch를 사용하여 대량의 데이터 처리를 위한 배치 처리 기능 제공
        implementation 'org.springframework.boot:spring-boot-starter-batch'

        //amqp rabbitmq message기능을 위한
        implementation("org.springframework.boot:spring-boot-starter-amqp")

        runtimeOnly 'com.mysql:mysql-connector-j'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
